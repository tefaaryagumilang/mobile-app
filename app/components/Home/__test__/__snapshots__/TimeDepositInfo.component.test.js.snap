// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TimeDepositInfo component renders correctly 1`] = `
<View>
  <View
    style={
      Object {
        "flex": 1,
        "paddingTop": 20,
      }
    }
  >
    <View
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#ECECEC",
          "flexDirection": "row",
          "marginBottom": 10,
        }
      }
    >
      <View
        style={
          Array [
            Array [
              Object {
                "flexDirection": "row",
                "paddingBottom": 10,
              },
              Object {
                "justifyContent": "flex-start",
              },
            ],
            Object {
              "flex": 1,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "roboto",
              "fontSize": 14,
              "fontWeight": "300",
              "marginRight": 20,
            }
          }
        >
          Jenis
        </Text>
      </View>
      <Text
        style={
          Object {
            "color": "#000000",
            "flex": 1,
            "fontFamily": "roboto",
            "fontWeight": undefined,
            "textAlign": "right",
          }
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#ECECEC",
          "flexDirection": "row",
          "marginBottom": 10,
        }
      }
    >
      <View
        style={
          Array [
            Array [
              Object {
                "flexDirection": "row",
                "paddingBottom": 10,
              },
              Object {
                "justifyContent": "flex-start",
              },
            ],
            Object {
              "flex": 1,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "roboto",
              "fontSize": 14,
              "fontWeight": "300",
              "marginRight": 20,
            }
          }
        >
          Nominal penempatan
        </Text>
      </View>
      <Text
        style={
          Object {
            "color": "#000000",
            "flex": 1,
            "fontFamily": "roboto",
            "fontWeight": undefined,
            "textAlign": "right",
          }
        }
      >
        Rp
         
        8,000,000
      </Text>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#ECECEC",
          "flexDirection": "row",
          "marginBottom": 10,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
            "paddingBottom": 10,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "fontFamily": "roboto",
                "fontSize": 14,
                "fontWeight": "300",
                "marginRight": 20,
              }
            }
          >
            Suku bunga
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#000000",
              "flex": 1,
              "fontFamily": "roboto",
              "fontWeight": undefined,
              "textAlign": "right",
            }
          }
        >
          5
           % 
          p.a.
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#ECECEC",
          "marginBottom": 10,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
            "paddingBottom": 10,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "fontFamily": "roboto",
                "fontSize": 14,
                "fontWeight": "300",
                "marginRight": 20,
              }
            }
          >
            Perkiraan jumlah bunga
            <Text
              style={
                Array [
                  Array [
                    Object {
                      "color": "#000",
                      "fontSize": 14,
                    },
                    Object {
                      "color": "#ED1D25",
                      "justifyContent": "flex-start",
                    },
                  ],
                  Object {
                    "paddingRight": 20,
                  },
                ]
              }
            >
              *
            </Text>
          </Text>
          <Text
            style={
              Array [
                Array [
                  Object {
                    "color": "#000",
                    "fontSize": 12,
                  },
                  Object {
                    "paddingBottom": 10,
                  },
                ],
                Object {
                  "color": "#ccc",
                },
              ]
            }
          >
            Nominal indikasi untuk 30 hari. Nominal asli bisa bervariasi.
Bunga dikenakan pajak.
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#000000",
              "flex": 1,
              "fontFamily": "roboto",
              "fontWeight": undefined,
              "textAlign": "right",
            }
          }
        >
          Rp
           
          32,876
        </Text>
      </View>
    </View>
    
    <View
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#ECECEC",
          "flexDirection": "row",
          "marginBottom": 10,
        }
      }
    >
      <View
        style={
          Array [
            Array [
              Object {
                "flexDirection": "row",
                "paddingBottom": 10,
              },
              Object {
                "justifyContent": "flex-start",
              },
            ],
            Object {
              "flex": 1,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "roboto",
              "fontSize": 14,
              "fontWeight": "300",
              "marginRight": 20,
            }
          }
        >
          Tanggal jatuh tempo
        </Text>
      </View>
      <Text
        style={
          Object {
            "color": "#000000",
            "flex": 1,
            "fontFamily": "roboto",
            "fontWeight": undefined,
            "textAlign": "right",
          }
        }
      >
        10 Apr 2017
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ED1D25",
            }
          }
        >
          Tutup pada pembayaran berikutnya
        </Text>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 13,
              },
              Object {
                "color": "#ED1D25",
              },
              Object {
                "fontFamily": "simas",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          Ó§Å
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideOnBack={true}
    onBackButtonPress={[Function]}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideOnBack={true}
      onBackButtonPress={[Function]}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 0,
          "padding": 0,
        }
      }
      transparent={true}
    >
      <View
        contentContainerStyle={
          Object {
            "flex": 1,
          }
        }
        extraHeight={120}
        keyboardShouldPersistTaps="handled"
        scrollEnabled={false}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(37, 8, 10, 0.78)",
                "flex": 1,
                "justifyContent": "center",
                "padding": 20,
              },
              Object {},
            ]
          }
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "padding": 20,
                },
                Object {},
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "padding": 5,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "padding": 5,
                    },
                    Object {
                      "color": "#000",
                      "fontSize": 24,
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Masukkan EasyPIN
              </Text>
              <Image
                source="easypin-small.png"
                style={
                  Object {
                    "height": 22,
                    "marginLeft": 5,
                    "marginTop": 5,
                    "width": 22,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "padding": 14,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "paddingLeft": 45,
                    "textAlign": "center",
                  }
                }
              >
                Masukkan 6 digit kode keamanan Anda
              </Text>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderRadius": 5,
                        "height": 15,
                        "justifyContent": "center",
                        "marginRight": 40,
                        "marginTop": 15,
                        "width": 15,
                      }
                    }
                  >
                    <Image
                      source="question-grey.png"
                    />
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onRequestClose={[Function]}
                  transparent={true}
                  visible={false}
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "rgba(0,0,0,0.5)",
                        "flex": 1,
                        "opacity": 0,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "left": undefined,
                            "position": "absolute",
                            "top": undefined,
                            "transform": Array [
                              Object {
                                "scale": 0,
                              },
                            ],
                          }
                        }
                      >
                        <View
                          onLayout={[Function]}
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "backgroundColor": "transparent",
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "white",
                                  "borderRadius": 5,
                                  "overflow": "hidden",
                                },
                                undefined,
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "padding": 10,
                                  },
                                  Array [
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              <View
                                accessible={true}
                                isTVSelectable={true}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <Text
                                  style={null}
                                >
                                  EasyPIN adalah 6 digit angka keamanan untuk otorisasi login dan beberapa transaksi. Mohon diajaga kerahasiaan EasyPIN Anda. Kami tidak mengirimkan SMS apapun mengenai EasyPIN.
                                </Text>
                              </View>
                            </View>
                          </View>
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderBottomColor": "transparent",
                                  "borderBottomWidth": 0,
                                  "borderLeftColor": "transparent",
                                  "borderLeftWidth": 10,
                                  "borderRightColor": "transparent",
                                  "borderRightWidth": 10,
                                  "borderStyle": "solid",
                                  "borderTopColor": "white",
                                  "borderTopWidth": 10,
                                  "height": 10,
                                  "width": 10,
                                },
                                Object {
                                  "left": 0,
                                  "marginLeft": 0,
                                },
                                null,
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "height": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                        "width": 0,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "borderRadius": 5,
                            "height": 15,
                            "justifyContent": "center",
                            "marginRight": 40,
                            "marginTop": 15,
                            "width": 15,
                          }
                        }
                      >
                        <Image
                          source="question-grey.png"
                        />
                      </View>
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "borderBottomColor": "#ED1D25",
                    "borderBottomWidth": 1,
                    "paddingTop": 10,
                  },
                  Object {
                    "width": 150,
                  },
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                autoFocus={true}
                keyboardType="numeric"
                maxLength={6}
                onChangeText={[Function]}
                rejectResponderTermination={true}
                secureTextEntry={true}
                style={
                  Object {
                    "fontSize": 24,
                    "height": 60,
                    "paddingVertical": 5,
                    "textAlign": "center",
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "justifyContent": "center",
                  "padding": 5,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#ccc",
                    "fontSize": 12,
                    "paddingHorizontal": 50,
                    "textAlign": "center",
                  }
                }
              >
                Akun Anda akan diblokir setelah 3 kali salah mencoba
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
